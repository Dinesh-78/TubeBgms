{"ast":null,"code":"var _jsxFileName = \"E:\\\\tubgms\\\\musicbase\\\\src\\\\pages\\\\Upload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadMusic() {\n  _s();\n  const [musicName, setMusicName] = useState('');\n  const [artist, setArtist] = useState('');\n  const [musicFile, setMusicFile] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create FormData object\n    const formData = new FormData();\n    formData.append('musicName', musicName);\n    formData.append('artist', artist);\n    formData.append('musicFile', musicFile);\n    try {\n      // Send POST request to backend endpoint\n      await axios.post('/api/upload-music', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      // Handle success, e.g., show a success message\n    } catch (error) {\n      console.error('Error uploading music:', error);\n      // Handle error, e.g., show an error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"musicName\",\n          children: \"Music Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"musicName\",\n          value: musicName,\n          onChange: e => setMusicName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"artist\",\n          children: \"Artist:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"artist\",\n          value: artist,\n          onChange: e => setArtist(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"musicFile\",\n          children: \"Music File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"musicFile\",\n          onChange: e => setMusicFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadMusic, \"ENCBur7Pj1aTtwiALwAoqt+sa8I=\");\n_c = UploadMusic;\nexport default UploadMusic;\nvar _c;\n$RefreshReg$(_c, \"UploadMusic\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadMusic","_s","musicName","setMusicName","artist","setArtist","musicFile","setMusicFile","handleSubmit","e","preventDefault","formData","FormData","append","post","headers","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","files","_c","$RefreshReg$"],"sources":["E:/tubgms/musicbase/src/pages/Upload.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UploadMusic() {\r\n  const [musicName, setMusicName] = useState('');\r\n  const [artist, setArtist] = useState('');\r\n  const [musicFile, setMusicFile] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create FormData object\r\n    const formData = new FormData();\r\n    formData.append('musicName', musicName);\r\n    formData.append('artist', artist);\r\n    formData.append('musicFile', musicFile);\r\n\r\n    try {\r\n      // Send POST request to backend endpoint\r\n      await axios.post('/api/upload-music', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      // Handle success, e.g., show a success message\r\n    } catch (error) {\r\n      console.error('Error uploading music:', error);\r\n      // Handle error, e.g., show an error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Music</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"musicName\">Music Name:</label>\r\n          <input type=\"text\" id=\"musicName\" value={musicName} onChange={(e) => setMusicName(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"artist\">Artist:</label>\r\n          <input type=\"text\" id=\"artist\" value={artist} onChange={(e) => setArtist(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"musicFile\">Music File:</label>\r\n          <input type=\"file\" id=\"musicFile\" onChange={(e) => setMusicFile(e.target.files[0])} />\r\n        </div>\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadMusic;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}